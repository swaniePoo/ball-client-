package me.dinozoid.strife.module.implementations.exploit;

import me.dinozoid.strife.alpine.listener.EventHandler;
import me.dinozoid.strife.alpine.listener.Listener;
import me.dinozoid.strife.event.implementations.network.PacketInboundEvent;
import me.dinozoid.strife.event.implementations.player.PlayerMotionEvent;
import me.dinozoid.strife.module.Category;
import me.dinozoid.strife.module.Module;
import me.dinozoid.strife.module.ModuleInfo;
import me.dinozoid.strife.property.implementations.EnumProperty;
import me.dinozoid.strife.util.player.RotationUtil;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;

@ModuleInfo(name = "NoRotate", renderName = "NoRotate", description = "Prevent the server from rotating you.", category = Category.EXPLOIT)
public class NoRotateModule extends Module {

    private final EnumProperty<NoRotateMode> modeProperty = new EnumProperty<>("Mode", NoRotateMode.HYPIXEL);

    private int ticksSinceLastFlag;
    private float lastYaw, lastPitch;

    @EventHandler
    private final Listener<PlayerMotionEvent> motionEventListener = new Listener<>(event -> {
        if (modeProperty.getValue() == NoRotateMode.HYPIXEL) {
            if (event.isPre() && ticksSinceLastFlag <= 4) {
                ticksSinceLastFlag++;
                float[] rotations = new float[]{event.getYaw(), event.getPitch()};
                lastYaw = rotations[0];
                lastPitch = rotations[1];
                event.setYaw(rotations[0]);
                event.setPitch(rotations[1]);
            }
        }
    });

    @EventHandler
    private final Listener<PacketInboundEvent> packetInboundListener = new Listener<>(event -> {
        switch (modeProperty.getValue()) {
            case HYPIXEL: {
                if (event.getPacket() instanceof S08PacketPlayerPosLook) {
                    S08PacketPlayerPosLook s08 = event.getPacket();
                    lastYaw = s08.getYaw();
                    lastPitch = s08.getPitch();
                    ticksSinceLastFlag = 0;
                    s08.setYaw(mc.thePlayer.rotationYaw);
                    s08.setPitch(mc.thePlayer.rotationPitch);
                }
                break;
            }
            case VANILLA: {
                if (event.getPacket() instanceof S08PacketPlayerPosLook) {
                    final S08PacketPlayerPosLook packet = event.getPacket();
                    packet.setPitch(mc.thePlayer.rotationPitch);
                    packet.setYaw(mc.thePlayer.rotationYaw);
                }
                break;
            }
            case LAST: {
                final S08PacketPlayerPosLook packet = event.getPacket();
                packet.setYaw(lastYaw);
                packet.setPitch(lastPitch);
                lastYaw = packet.getYaw();
                lastPitch = packet.getPitch();
                break;
            }
        }
    });

    public enum NoRotateMode {
        HYPIXEL, VANILLA, LAST
    }

}
